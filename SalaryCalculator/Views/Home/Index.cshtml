@model SalaryCalculator.Models.SalaryModel

@{
    ViewData["Title"] = "Salary Calculator";
}

@using (Html.BeginForm("Calculate", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="title" style="padding-bottom: 1em">
        <h1>Salary Calculator
            <i id="infoIcon" class="bi bi-info-circle"
               data-bs-toggle="popover" data-bs-trigger="hover"
               data-bs-html="true" data-bs-placement="right"
               style="font-size: 24px; cursor: pointer;">
            </i>
        </h1>
    </div>

    <div class="row g-1">
        <div class="col-md-6">
            <div class="form-group mb-3">
                @Html.LabelFor(m => m.FirstName, new { @class = "form-label" })
                @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your first name" } })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-3">
                @Html.LabelFor(m => m.LastName, new { @class = "form-label" })
                @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your last name" } })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-3">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "form-label" })
                @Html.EditorFor(m => m.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your phone number" } })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-3">
                @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your email" } })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-3">
                @Html.LabelFor(m => m.Company, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.Company, Html.GetEnumSelectList<SalaryModel.CompanyType>(), "Select company", new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.Company, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-3">
                @Html.LabelFor(m => m.Work, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.Work, Html.GetEnumSelectList<SalaryModel.WorkType>(), "Select work", new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.Work, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-3">
                @Html.LabelFor(m => m.Salary, new { @class = "form-label" })
                @Html.EditorFor(m => m.Salary, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your salary" } })
                @Html.ValidationMessageFor(m => m.Work, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group mb-3">
                <div class="radio-option">
                    @Html.RadioButtonFor(m => m.IsDegree, "True", new { @id = "hasDegree", @class = "custom-radio" })
                    <label for="hasDegree" class="radio-label">Has degree</label>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group mb-3">
                <div class="radio-option">
                    @Html.RadioButtonFor(m => m.IsDegree, "False", new { @id = "noDegree", @class = "custom-radio" })
                    <label for="noDegree" class="radio-label">No degree</label>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mb-3">
                @Html.LabelFor(m => m.HoursWorked, new { @class = "form-label" })
                @Html.EditorFor(m => m.HoursWorked, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your hours worked" } })
                @Html.ValidationMessageFor(m => m.HoursWorked, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="mt-4">
            <input type="submit" value="Calculate" class="btn btn-primary" />
        </div>
    </div>

    @if (Model.ShowResult)
    {
        <br />
        <div class="alert alert-success" role="alert">
            <label>Result:</label>
            <span>Your calculated salary limit is: <strong>$@String.Format("{0:F2}", @Model.CalculatedSalaryLimit)</strong></span>
        </div>
    }

}
